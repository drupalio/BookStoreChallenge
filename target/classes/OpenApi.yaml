openapi: 3.0.1
info:
  title: Book Store API
  description: API for managing books
  version: 1.0.0
paths:
  /books/{id_book}:
    get:
      tags:
        - Books
      summary: Search books by ID
      description: Get book details by ID
      parameters:
        - in: path
          name: id_book
          required: true
          schema:
            type: string
      responses:
        '200':
          description: Book details retrieved successfully
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BookRecord'
  /books/loan:
    post:
      tags:
        - Books
      summary: Request loan
      description: Request a loan for a book
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/LoanRecord'
      responses:
        '200':
          description: Loan request successful
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/LoanRecord'
  /books/reviews:
    post:
      tags:
        - Books
      summary: Send review
      description: Send a review for a book
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/RatingRecord'
      responses:
        '200':
          description: Review sent successfully
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RatingRecord'
  /books/reviews/{id_book}:
    get:
      tags:
        - Books
      summary: List reviews by book ID
      description: Get reviews for a book by its ID
      parameters:
        - in: path
          name: id_book
          required: true
          schema:
            type: string
      responses:
        '200':
          description: Reviews retrieved successfully
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/RatingRecord'
  /books/ratings:
    post:
      tags:
        - Books
      summary: Rate book
      description: Rate a book
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/RatingRecord'
      responses:
        '200':
          description: Book rated successfully
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RatingRecord'
components:
  schemas:
    BookRecord:
      type: object
      properties:
        id:
          type: string
          format: int64
        title:
          type: string
        author:
          type: string
        gender:
          $ref: '#/components/schemas/GenderRecord'
    GenderRecord:
      type: object
      properties:
        id:
          type: string
          format: int64
        name:
          type: string
    InventoryRecord:
      type: object
      properties:
        id:
          type: string
          format: int64
        book:
          $ref: '#/components/schemas/BookRecord'
        available:
          type: boolean
    LoanRecord:
      type: object
      properties:
        id:
          type: string
          format: int64
        user:
          $ref: '#/components/schemas/UserRecord'
        book:
          $ref: '#/components/schemas/BookRecord'
        loanDate:
          type: string
          format: date-time
        returnDate:
          type: string
          format: date-time
    RatingRecord:
      type: object
      properties:
        id:
          type: string
          format: int64
        user:
          $ref: '#/components/schemas/UserRecord'
        book:
          $ref: '#/components/schemas/BookRecord'
        stars:
          type: integer
          format: int32
        comment:
          type: string
    UserRecord:
      type: object
      properties:
        id:
          type: string
          format: int64
        name:
          type: string
        lastName:
          type: string
        email:
          type: string
